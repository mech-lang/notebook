Mech Notebook
==============

Start a timer for animations

#time/timer += [period: 1<ms>]
#code-button = false
#tables-button = false
#docs-button = false
#timeline-button = false
#settings-button = false
#compile-button = false
#inspect-button = false
#open-file-button = false

#opened-file = [name: "untitled.mec" contents: ""]

#loaded-files = [|name<string> contents<string>|]

block
  ~ #opened-file.name
  #loaded-files += #opened-file

The dot grid
  x = (1:300) * 16 + 55
  y = (1:200) * 16 + #top-panel-height + 15
  indices = set/cartesian(a: x, b: y)
  #grid = [
    kind: "canvas"
    contains: [
      shape: "circle"
      parameters: [
        center-x: indices{:,1}, 
        center-y: indices{:,2}, 
        radius: 1
        fill: 0x5A5476]]]

Follow Cursor
  #cursor = [
    kind: "canvas"
    contains: [
      shape: "circle"
      parameters: [
        center-x: #io/pointer.x
        center-y: #io/pointer.y
        radius: 25,
        fill: 0x3E3848]]]

1. Panels
----------

Panel contents
  switches = [
    [#code-button]
    [#tables-button]
    [#inspect-button]
    [#docs-button]
  ]
  panels = [
    "Co"
    "Ta"
    "In"
    "Do"
  ]
  #left-contents = [[kind: "button" clicked: switches text: panels parameters: [padding: 10 rounding: 3 hover-fill: 0xB27E9B fill: 0x7F4C68 stroke: [top: 2, color: 0xCEAFC0]]]
                    [kind: "open-file" clicked: [#open-file-button] file: [#opened-file] text: "Op" parameters: [padding: 10 hover-fill: 0xB27E9B fill: 0x7F4C68 stroke: [top: 2, color: 0xCEAFC0]]]]

Testing frames
  #test = [
    kind: "frame"
    contains: "World"
    parameters: [fill: 0x3E3848, stroke: [width: 2, color: 0x000000], shadow: [distance: 10, color: 0xFFFFFF], padding: [left: 10, top: 10, right: 150, bottom: 20], margin: 5, rounding: 5]
  ]

The code area and output
  #code-area = [
    kind: "panel-left" 
    contains: [#code-contents] 
    parameters: [fill: 0x131218, min-width: 600] 
  ]
  #code-output = [
    kind: "panel-left"
    contains: "Hello"
    parameters: [width: 600, padding: 20]
  ]
  
#code-output-contents = ["Hello"]

#code = "Hello"

Init with code area and output
  #app-contents = [
    [#code-contents]
  ]

Here's the docs contents
  #docs-contents = [
    kind: "panel-left"
    contains: [
      [kind: "panel-top" contains: [kind: "label" text: "Bouncing Balls" parameters: [color: 0x9DC3E6, size: 16]] parameters: [margin: [bottom: 2]]]
      [kind: "panel-top" contains: [kind: "label" text: "===============" parameters: [color: 0x9DC3E6, size: 16]] parameters: [margin: [bottom: 10]]]
      [kind: "panel-top" contains: [kind: "label" text: "This program is a forward kinematic simulation of three balls bouncing in a bounded arena. Each of the balls are accelerated by simulated gravity and are repelled by the bounds of the arena." parameters: [color: 0xE3DDEB, size: 16]] parameters: [margin: [bottom: 2]]]
    ]
    parameters: [min-width: 400, resizable: true, padding: 40, fill: 0x39344A visible: #docs-button]
  ]

Here's the docs contents
  #inspect-contents = [
    kind: "panel-right"
    contains: [
      [kind: "panel-top" contains: [kind: "label" text: "Bouncing Balls" parameters: [color: 0x9DC3E6, size: 16]] parameters: [margin: [bottom: 2]]]
      [kind: "panel-top" contains: [kind: "label" text: "===============" parameters: [color: 0x9DC3E6, size: 16]] parameters: [margin: [bottom: 10]]]
      [kind: "panel-top" contains: [kind: "label" text: "This program is a forward kinematic simulation of three balls bouncing in a bounded arena. Each of the balls are accelerated by simulated gravity and are repelled by the bounds of the arena." parameters: [color: 0xE3DDEB, size: 16]] parameters: [margin: [bottom: 2]]]
    ]
    parameters: [min-width: 400, resizable: true, padding: 40, fill: 0x39344A visible: #inspect-button]
  ]

This creates a table of booleans switches which will be used to open and close an assoicated window
  x = [false #mech/tables]
  #table-toggles >- x

Tables panels
  #tables-panel-contents = [
    kind: "panel-left"
    contains: [
      [kind: "scroll-area" contains: [kind: "table-window" clicked: #table-toggles text: #mech/tables]]
    ]
    parameters: [min-width: 400 fill: 0x2E2A3C visible: #tables-button]
  ]

2. Interactions
----------------

When the compile button is clicked, take the contents of the code area
and compile it.
  ~ #compile-button
  #notebook/compiler := [code: #code]
  #code-output-contents := #code

Code contents
  #code-contents = [
    [kind: "scroll-area"
     contains: [kind: "code" text: [#code] parameters: [margin: 0, padding: 40]]
    ]
  ]

When the code button is clicked, show the code editor
  ~ #code-button
  #code-area.contains := [[#code-contents]]
  #app-area.contains := [[#code-area]; [#code-output]]

Keep docs content in sync with file contents
  #active-code = #loaded-files.contents{#active-tab-ix}

Add a blank file when the add-file button is clicked
  ~ #add-file-button
  #loaded-files += [name: "untitled.mec" contents: ""]

Add a blank file when the add-file button is clicked
  ~ #add-core-button
  #core-names += [name: "core" contents: ""]

#core-names = [name: "core 1" contents: ""]

3. Drawing
-----------

#top-panel-height = 25
#bottom-panel-height = 25
#active-tab-ix = 1<u8>
#add-file-button = false
#active-core-ix = 1<u8>
#add-core-button = false

The panels
  #top-panel = [
    kind: "panel-top" 
    contains: [
      [kind: "panel-left" contains: [kind: "tabs" active: [#active-tab-ix] labels: [#loaded-files.name], parameters: [padding: [left: 10 right: 10 top: 5 bottom: 5], margin: 10, fill: 0x17151E, active-fill: 0x39344A, clicked-fill: 0x39344A hover-fill: 0xB8B4CA, stroke: [bottom: 2, color: 0x5A5476], active-stroke: [bottom: 2, color: 0xA5DDCB]]]]
      [kind: "panel-left" contains: [kind: "button" clicked: [#add-file-button] text: "+", parameters: [padding: [left: 10 right: 10 top: 5 bottom: 5], margin: 10, active-fill: 0x39344A, hover-fill: 0xB8B4CA]]]
    ]
    parameters: [padding: 0] 
  ]
Bottom
  #bottom-panel = [
    kind: "panel-bottom" 
    contains: [
      [kind: "panel-left" contains: [kind: "tabs" active: [#active-core-ix] labels: [#core-names], parameters: [padding: [left: 10 right: 10 top: 5 bottom: 5], margin: 10, active-fill: 0xCC6563, active-stroke: [top: 2, color: 0xDE9E9D], active-stroke: [top: 2, color: 0xDE9E9D], clicked-fill: 0x60201F hover-fill: 0xDE9E9D]]]
      [kind: "panel-left" contains: [kind: "button" clicked: [#add-core-button] text: "+", parameters: [padding: [left: 10 right: 10 top: 5 bottom: 5], margin: 10 active-fill: 0xCC6563, hover-fill: 0xDE9E9D]]]
    ]
    parameters: [fill: 0xC0403D, padding: 0, height: 25] 
  ]
  #left-panel = [
    kind: "panel-left" 
    contains: [#left-contents] 
    parameters: [width: 40, padding: [top: 40, left: 10, right: 10] ] 
  ]
  #app-area = [
    kind: "panel-center" 
    contains: [[#tables-panel-contents];  [#docs-contents]; [#inspect-contents]; [#top-panel]; [#app-contents]]
    parameters: [margin: 0, padding: 0]
  ]

Add a gui application
  #app = [
    [#grid]
    [#bottom-panel]
    [#left-panel]
    [#app-area]
  ]